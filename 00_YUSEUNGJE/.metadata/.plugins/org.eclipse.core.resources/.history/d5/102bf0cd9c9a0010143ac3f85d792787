-- 문제40 : 다른 쿼리의 결과를 조건으로 사용하기
-- 주제: 서브쿼리 ( WHERE 절 내부)
-- 문제: 평균 조회수보다 더 많은 조회수를 기록한 비디오의 제목과 조회수를 조회하세요.
-- 평균조회수를 찾기
SELECT AVG(view_count) FROM videos; -- 785002.0833

SELECT
       title
     , view_count 
  FROM videos
 WHERE view_count > (SELECT AVG(view_count) 
			     FROM videos);

-- 문제 41: 목록(List)을 반환하는 서브쿼리 사용하기
-- 주제: 서브쿼리 with IN
-- 문제: '코딩 아카데미' 채널이 올린 비디오에 '좋아요'를 누른 
-- 모든 사용자의 username을 조회하세요. 
--  (JOIN을 사용하지 않고 서브쿼리로만 풀어보기!)

SELECT
       username
  FROM users
WHERE user_id IN (SELECT user_id 
                    FROM video_likes  
                   WHERE video_id IN(SELECT video_id 
                                       FROM videos 
                                      WHERE creator_id = (SELECT creator_id 
                                                            FROM creators 
                                                           WHERE channel_name = '코딩 아카데미'
                                                         )
						
                                    )

			)


-- 문제 42: 두 개의 결과 합치기 (중복 제거)
-- 주제: 집합 연산자 UNION
-- 문제: 'IT/테크' 카테고리에 속한 비디오의 제목과, '코딩 아카데미' 채널이 올린 비디오의 제목을 하나의 목록으로 합쳐서 보여주세요. 중복된 제목이 있다면 한 번만 표시합니다.
SELECT title 
  FROM videos 
 WHERE category = 'IT/테크'
 UNION 
SELECT title 
  FROM videos 
 WHERE creator_id = (SELECT creator_id 
                       FROM creators 
                      WHERE channel_name = '코딩 아카데미');

-- 문제 43: 두 개의 결과 합치기 (중복 포함)
-- 주제: 집합 연산자 UNION ALL
-- 문제: users 테이블에서 국적이 '대한민국'인 사용자의 username과, creators 테이블에 있는 모든 크리에이터의 channel_name을 하나의 목록으로 합쳐서 보여주세요.
--      이 경우, 이름이 같더라도 중복을 제거하지 말고 모두 표시합니다.


-- 문제 44: FROM 절에서 서브쿼리 사용하기
-- 주제: 서브쿼리 (인라인 뷰 Inline View)
-- 문제: 각 크리에이터별 평균 비디오 조회수를 먼저 구하고, 그 중에서 평균 조회수가 1,000,000 (백만)을 초과하는 크리에이터의 creator_id와 계산된 평균 조회수를 조회하세요.


-- 문제 45: SELECT 절에서 서브쿼리 사용하기
-- 주제: 서브쿼리 (스칼라 서브쿼리)
-- 문제: creators 테이블의 각 채널에 대해, 채널명과 해당 채널이 올린 비디오의 총 개수를 함께 조회하세요. (JOIN을 사용하지 마세요.)

